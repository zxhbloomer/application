#单个EurekaServer配置
server:
  port: 9100
  ssl:  #Https配置
    enabled: true
    key-store: classpath:server.p12
    key-store-password: server
    key-store-type: PKCS12
    key-alias: server
spring:
  security:
#    basic:
#      enabled: true #yml方式开启HttpBasic验证 (需要另外在BeanConfig关闭CSRF)
    user:
      name: admin       #登录账号
      password: 123 #登录密码
  application:
    name: eureka-server-single
#  profiles:
#    active: server3 #使用profiles指定配置文件有时候会不行(高可用)

#logging:
#  level:
#    org.springframework: DEBUG #开启springframework的debug输出级别

eureka:
  server:
    enable-self-preservation: true #是否开启自我保护模式(最近一分钟接收到的续约次数小于阈值则关闭租约失效剔除)[服务及时剔除]
    renewal-percent-threshold: 0.85 #指定每分钟需要收到的续约次数的阈值
    renewal-threshold-update-interval-ms: 900000 #指定updateRenewalThreshold定时任务的调度频率,来动态更新expectedNumberOfRenewsPerMin及numberOfRenewsPerMinThreshold值
    eviction-interval-timer-in-ms: 60000 #指定EvictionTask定时任务的调度频率,用于剔除过期的实例[服务及时剔除]
    use-read-only-response-cache: true #是否使用只读的response-cache
    response-cache-update-interval-ms: 30000 #设置CacheUpdateTask 的调度时间间隔,用于从readWrit-CacheMap更新数据到readOnlyCacheMap.仅在use-read-only-response-cache为true的时候生效
    response-cache-auto-expiration-in-seconds: 180 #设置readWriteCacheMap的expireAfterWrite参数,指定写入多长时间后过期[服务及时剔除]
    peer-eureka-nodes-update-interval-ms: 600000 #指定peersUpdateTask调度的时间间隔,用于从配置文件刷新peerEurekaNodes节点的配置信息(eureka.client.serviceUrl相关的zone的配置)
    peer-eureka-status-refresh-time-interval-ms: 30000 #指定更新peer nodes状态信息的时间间隔(目前没有看到代码中使用)
    peer-node-connect-timeout-ms:  200 #连接超时时间(EurekaServerHttp)
    peer-node-read-timeout-ms: 200 #读超时时间(EurekaServerHttp)
    peer-node-total-connections: 1000 #连接池最大连接数[MaxTotal](EurekaServerHttp)
    peer-node-total-connections-per-host: 500 #每个host能使用的最大连接数[DefaultMaxPerRoute](EurekaServerHttp)
    peer-node-connection-idle-timeout-seconds: 30 #连接池中连接的空闲时间[connectionIdleTimeout](EurekaServerHttp)
  instance:
    registry:
      expected-number-of-renews-per-min: 1 #指定每分钟需要收到的续约次数值,实际改值在其中被写死成 count*2,另外也会被更新
    hostname: localhost #这里使用localhost如果需要使用其他的配置需要在host文件更改映射
    instance-id: ${spring.application.name}:${server.port}

    secure-port: ${server.port}
    secure-port-enabled: false
    home-page-url: https://${eureka.instance.hostname}:${server.port}/
    status-page-url: https://${eureka.instance.hostname}:${server.port}/
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/